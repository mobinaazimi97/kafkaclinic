spring.application.name=patient

server.port=9443

# Security
server.ssl.key-store=classpath:ssl/keystore.jks
server.ssl.key-store-password=java123
server.ssl.key-alias=myalias
server.ssl.key-store-type=JKS
server.servlet.session.timeout=15000
server.servlet.session.cookie.same-site=strict

# H2 (in?memory)
#spring.datasource.url=jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
#spring.datasource.driver-class-name=org.h2.Driver
#spring.datasource.username=sa
#spring.datasource.password=
#spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
#spring.jpa.hibernate.ddl-auto=create-drop
#spring.jpa.show-sql=true
#spring.h2.console.enabled=true
#spring.h2.console.path=/h2-console
#
#logging.level.root=info

# Eureka
#eureka.client.service-url.defaultZone=http://host.docker.internal:8761/eureka-server
#eureka.client.service-url.defaultZone=http://eureka-server:8761/eureka
#eureka.instance.hostname=patient
#eureka.instance.prefer-ip-address=false
#eureka.instance.leaseRenewalIntervalInSeconds=30
#eureka.instance.leaseExpirationDurationInSeconds=90
#logging.level.com.netflix.discovery=debug
#eureka.client.service-url.defaultZone=http://localhost:8761/eureka/
#eureka.instance.hostname=localhost
#eureka.instance.prefer-ip-address=true
#spring.profiles.active=local




# Kafka (use env var or default to kafka:9092 inside Docker)
#spring.kafka.bootstrap-servers=${SPRING_KAFKA_BOOTSTRAP_SERVERS:kafka:9092}
spring.kafka.bootstrap-servers=${SPRING_KAFKA_BOOTSTRAP_SERVERS:localhost:9092}


# Producer (plain?string)
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer

# Consumer (plain?string)
spring.kafka.consumer.group-id=patient-group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
logging.level.org.springframework.kafka=info
logging.level.org.springframework.kafka.listener.KafkaMessageListenerContainer=info
logging.level.org.springframework.kafka.listener.ConcurrentMessageListenerContainer=info
logging.level.org.springframework.kafka.support.serializer=TRACE



#netstat -ano | findstr :2181
#.taskkill /PID 14544 /F
#java -jar target/eureka-server-0.0.1-SNAPSHOT.jar

#Oracle:
spring.datasource.driver-class-name=oracle.jdbc.OracleDriver
spring.datasource.url=jdbc:oracle:thin:@localhost:1521:xe
spring.datasource.username=spr
spring.datasource.password=sp123
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.show-sql=true
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.maximum-pool-size=20
spring.web.resources.static-locations=classpath:/static/
logging.level.org.apache.kafka=INFO
logging.level.root=error
#spring.web.resources.static-locations=classpath:/static/

# Docker (??????? ???? ??? ????)
#spring.docker.compose.enabled=false


#spring.application.name=patient
#server.port=8080
#spring.datasource.driver-class-name=oracle.jdbc.OracleDriver
#spring.datasource.url=jdbc:oracle:thin:@localhost:1521:xe
#spring.datasource.username=mft
#spring.datasource.password=mft123
#spring.jpa.hibernate.ddl-auto=create-drop
#spring.jpa.show-sql=true
#spring.datasource.hikari.minimum-idle=5
#spring.datasource.hikari.maximum-pool-size=20
#spring.web.resources.static-locations=classpath:/static/
##logging.level.org.apache.kafka=INFO
#logging.level.root=info
#
#spring.docker.compose.file=../docker-compose.yml
#spring.docker.compose.enabled=false
#eureka.client.service-url.defaultZone=http://localhost:8761/eureka
#eureka.instance.prefer-ip-address=true
#
#
#
#spring.kafka.bootstrap-servers=localhost:9092
#
#spring.kafka.consumer.group-id=patient-group
#spring.kafka.consumer.auto-offset-reset=earliest
#spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
#spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
#spring.kafka.consumer.properties.spring.json.trusted.packages=*
#spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
##spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
#spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer

#encryption.key=yourSuperSecretEncryptionKey123


#Kafka :
#spring.kafka.bootstrap-servers=localhost:9092
#spring.kafka.consumer.group-id=patient-service
#spring.kafka.consumer.auto-offset-reset=earliest
#spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
#spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
#spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
#spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.batch-size=2000000000
#spring.kafka.consumer.properties.spring.json.trusted.packages=*

