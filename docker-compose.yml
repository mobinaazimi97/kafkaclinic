services:
  spring:
    profiles:
      - dev


  patient:
    build:
      context: ./patient
    container_name: patient
    ports:
      - "8085:8080"
    depends_on:
      kafka:
        condition: service_started
    environment:
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=host.docker.internal:9092
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - check-network

  appointment:
    build:
      context: ./appointment
    container_name: appointment
    ports:
      - "8081:8081"
    depends_on:
      kafka:
        condition: service_started
    environment:
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=host.docker.internal:9092
      - SPRING_PROFILES_ACTIVE=docker
    networks:
        - check-network

  zookeeper:
    image: bitnami/zookeeper:3.8
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    ports:
      - "2181:2181"
    volumes:
      - zookeeper-data:/bitnami/zookeeper
    healthcheck:
      test: [ "CMD", "echo", "ruok", "|", "nc", "-w", "2", "localhost", "2181", "|", "grep", "imok" ]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - check-network
  kafka:
    image: bitnami/kafka:3.6
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      - ALLOW_PLAINTEXT_LISTENER=yes

      - KAFKA_MODE=zookeeper

      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181

      - KAFKA_CFG_LISTENERS=PLAINTEXT://0.0.0.0:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://host.docker.internal:9092

      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT

      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT

      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - KAFKA_CFG_MAX_MESSAGE_BYTES=2000000000
    volumes:
      - kafka-data:/bitnami/kafka
    healthcheck:
      test: [ "CMD", "/opt/bitnami/kafka/bin/kafka-topics.sh --list --bootstrap-server localhost:9092" ]
      interval: 10s
      timeout: 10s
      retries: 3
    networks:
      - check-network

volumes:
  zookeeper-data:
  kafka-data:

networks:
  check-network:
    driver: bridge
